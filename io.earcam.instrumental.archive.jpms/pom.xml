<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.earcam</groupId>
		<artifactId>io.earcam.instrumental</artifactId>
		<version>0.1.1-SNAPSHOT</version>
	</parent>

	<groupId>io.earcam.instrumental</groupId>
	<artifactId>io.earcam.instrumental.archive.jpms</artifactId>
	<packaging>jar</packaging>

	<description>Archive extension for JPMS modules</description>

	<distributionManagement>
		<site>
			<id>site</id>
			<url>${site.url}${earcam.project.name.short}/</url>
		</site>
	</distributionManagement>

	<properties>
		<skip.execution.pitest>false</skip.execution.pitest>
		<tidy.skip>false</tidy.skip>
		<earcam.project.name.short>archive.jpms</earcam.project.name.short>
		
		<instrumental.jdk.home>${java.home.10}</instrumental.jdk.home>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.earcam.instrumental</groupId>
			<artifactId>io.earcam.instrumental.fluent</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>io.earcam.instrumental</groupId>
			<artifactId>io.earcam.instrumental.archive</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>io.earcam.instrumental</groupId>
			<artifactId>io.earcam.instrumental.module.auto</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>io.earcam.instrumental</groupId>
			<artifactId>io.earcam.instrumental.module.jpms</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>io.earcam.instrumental</groupId>
			<artifactId>io.earcam.instrumental.reflect</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>io.earcam</groupId>
			<artifactId>io.earcam.unexceptional</artifactId>
		</dependency>

		<dependency>
			<groupId>io.earcam.utilitarian</groupId>
			<artifactId>io.earcam.utilitarian.io</artifactId>
		</dependency>

		<dependency>
			<groupId>io.earcam.instrumental</groupId>
			<artifactId>io.earcam.instrumental.lade</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.earcam.utilitarian</groupId>
			<artifactId>io.earcam.utilitarian.charstar</artifactId>
		</dependency>
	
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>java-hamcrest</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.tinybundles</groupId>
			<artifactId>tinybundles</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>${version.junit.platform}</version>
					</dependency>

					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${version.junit5}</version>
					</dependency>

					<dependency>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
						<version>${version.junit5}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>${version.junit.platform}</version>
					</dependency>

					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${version.junit5}</version>
					</dependency>

					<dependency>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
						<version>${version.junit5}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>capture-classpaths-as-properties</id>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<property name="maven.classpath.compile" refid="maven.compile.classpath" />
								<property name="maven.classpath.runtime" refid="maven.runtime.classpath" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>map-jdk-modules</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>process-classes</phase>
						<configuration>
							<executable>${java.home.10}/bin/java</executable>
							<arguments>
								<argument>-Dinstrumental.jdk.home=${instrumental.jdk.home}</argument>
								<argument>-Duser.dir=${project.basedir}</argument>
								<argument>-Dorg.slf4j.simpleLogger.defaultLogLevel=trace</argument>
								<argument>-cp</argument>
								<argument>${maven.classpath.runtime}</argument>
								<argument>${project.artifactId}.auto.JdkModules</argument>
							</arguments>
							<successCodes>
								<successCode>0</successCode>
							</successCodes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>cache-file-exists</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<rules>
								<requireFilesExist>
									<files>
										<file>${project.build.outputDirectory}/META-INF/jpms.cache</file>
									</files>
								</requireFilesExist>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
